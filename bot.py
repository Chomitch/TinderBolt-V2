from telegram.ext import ApplicationBuilder, MessageHandler, filters, CallbackQueryHandler, CommandHandler

from gpt import *
from util import *

# —Ç—É—Ç –±—É–¥–µ–º –ø–∏—Å–∞—Ç—å –Ω–∞—à –∫–æ–¥ :)
async def hello(update, context):
    if dialog.mode=='gpt':
        await gpt_dialog(update, context)
    else:
        await send_photo(update, context, "avatar_main")
        await send_text(update, context, "–ü—Ä–∏–≤–µ—Ç!")
        await send_text(update, context, f"–¢—ã –Ω–∞–ø–∏—Å–∞–ª: \"{update.message.text}\"")
        await send_text_buttons(update, context, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã", {  # –¢–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π
            "btn_start": " –°—Ç–∞—Ä—Ç ", # –¢–µ–∫—Å—Ç –∏ –∫–æ–º–∞–Ω–¥–∞ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ä—Ç"
            "btn_stop": " –°—Ç–æ–ø "  # –¢–µ–∫—Å—Ç –∏ –∫–æ–º–∞–Ω–¥–∞ –∫–Ω–æ–ø–∫–∏ "–°—Ç–æ–ø"
        })

async def hello_button(update, context):
    query = update.callback_query.data   #–∫–æ–¥ –∫–Ω–æ–ø–∫–∏
    await update.callback_query.answer() #–ø–æ–º–µ—á–∞–µ–º —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
    await send_html(update, context, "–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É " + query)

async def start(update, context):
    dialog.mode='main'
    await send_photo(update, context, "main")
    await send_text(update, context, load_message("main"))
    await show_main_menu(update, context, {
        'start':'–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞',
        'profile':'–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–ª—è üòé',
        'opener':'—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞',
        'message':'–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà',
        'date':'–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•',
        '/gpt':'–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —á–∞—Ç—É GPT üß†'
    })

async def gpt(update, context):
    dialog.mode='gpt'
    await send_photo(update, context, "gpt")
    await send_text(update, context, load_message("gpt"))

async def gpt_dialog(update, context):
    text=update.message.text
    answer=await chatgpt.send_question(load_prompt('gpt'), text)
    await send_text(update, context, answer)

dialog=Dialog()
dialog.mode=None

chatgpt=ChatGptService(load_gpt_token())

app = ApplicationBuilder().token(load_telegram_token()).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("gpt", gpt))
app.add_handler(MessageHandler(filters.TEXT&~filters.COMMAND, hello))
app.add_handler(CallbackQueryHandler(hello_button))
app.run_polling()